openapi: 3.0.3
info:
  title: Service for products in cart
  description: Products-in-cart service for the 'Livestock' project.
  contact:
    name: Luke Sukhanov
    email: lukesukhanov@gmail.com
    url: https://github.com/lukesukhanov
  version: '1.0'
servers:
- url: http://localhost:8765
- url: http://localhost:8083
paths:
  /productsInCart:
    get:
      tags:
      - Products in cart
      summary: Finds products in a cart by user's email using paging
      description: Requires 'cart' scope. The user's email must be the same as the current principal username.
      parameters:
      - in: query
        name: page
        description: The required page
        required: false
        schema:
          type: integer
          format: int32
      - in: query
        name: size
        description: The page size
        required: false
        schema:
          type: integer
          format: int32
      - in: query
        name: userEmail
        description: The user's email
        required: true
        schema:
          type: string
      responses:
        200:
          description: Normal response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsInCartPage'
        400:
          description: Response in case of invalid request parameters
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidRequestParametersProblem'
    post:
      tags:
      - Products in cart
      summary: Adds the given quantity of the given product into the user's cart
      description: Requires 'cart.write' scope. The user's email must be the same as the current principal username.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductToAddIntoCart'
      responses:
        204:
          description: Normal response
        400:
          description: Response in case of invalid request parameters
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidRequestParametersProblem'
    delete:
      tags:
      - Products in cart
      summary: Clears a cart for the user with the given email.
      description: Requires 'cart.write' scope. The user's email must be the same as the current principal username.
      parameters:
      - in: query
        name: userEmail
        description: The user's email
        required: true
        schema:
          type: string
      responses:
        204:
          description: Normal response
        400:
          description: Response in case the query parameter has invalid type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RequestPropertyTypeMismatchProblem'
  /productsInCart/{productId}:
    delete:
      tags:
      - Products in cart
      summary: Removes a product from the cart by product's id and user's email
      description: Requires 'cart.write' scope. The user's email must be the same as the current principal username.
      parameters:
      - in: path
        name: productId
        description: The product's id
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: userEmail
        description: The user's email
        required: true
        schema:
          type: string
      responses:
        204:
          description: Normal response
        400:
          description: Response in case the path variable has invalid type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RequestPropertyTypeMismatchProblem'
components:
  schemas:
    ProductInCart:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: Овцы бараны
        description:
          type: string
          example: Продаю баранов и овец
        quantity:
          type: integer
          format: int32
          example: 2
        price:
          type: number
          format: double
          example: 9500
        currency:
          type: string
          example: RUB
    ProductsInCartPage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCart'
        numberOfElements:
          type: integer
          format: int32
          example: 5
        first:
          type: boolean
          example: true
        last:
          type: boolean
          example: false
        totalElements:
          type: integer
          format: int32
          example: 10
        totalPages:
          type: integer
          format: int32
          example: 2
    InvalidRequestParametersProblem:
      type: object
      properties:
        type:
          type: string
          example: /probs/invalidRequestParameters
        title:
          type: string
          example: Invalid request parameters
        status:
          type: integer
          format: int32
          example: 400
        invalid-params:
          type: array
          items:
            $ref: '#/components/schemas/InvalidRequestParameter'
    InvalidRequestParameter:
      type: object
      properties:
        name:
          type: string
          example: page
        reason:
          type: string
          example: Page ordinal must be greater than or equal to 0
    ProductToAddIntoCart:
      type: object
      properties:
        userEmail:
          type: string
          example: "vasya@gmail.com"
        productId:
          type: integer
          format: int64
          example: 1
        quantity:
          type: integer
          format: int32
          example: 2
    InvalidRequestBodyFieldsProblem:
      type: object
      properties:
        type:
          type: string
          example: /probs/invalidRequestBodyFields
        title:
          type: string
          example: Invalid request body fields
        status:
          type: integer
          format: int32
          example: 400
        invalid-fields:
          type: array
          items:
            $ref: '#/components/schemas/InvalidRequestBodyField'
    InvalidRequestBodyField:
      type: object
      properties:
        name:
          type: string
          example: userId
        reason:
          type: string
          example: The user's email is required
    RequestPropertyTypeMismatchProblem:
      type: object
      properties:
        type:
          type: string
          example: /probs/requestPropertyTypeMismatch
        title:
          type: string
          example: Request property type mismatch
        status:
          type: integer
          format: int32
          example: 400
        detail:
          type: string
          example: Failed to convert value ...
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer